name: Build IMM for N1-6.6

on:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: v24.10.1
  CONFIG_FILE: N1/.config
  DIY_SH: N1/diy.sh
  FILES: N1/files
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: 检查服务器配置
      run: |
        echo "⚠️ 警告：编译插件需谨慎选择，注意CPU性能"
        echo "推荐避免选择Node.js相关插件"
        echo "--------------------------CPU信息--------------------------"
        echo "CPU物理数量:$(cat /proc/cpuinfo| grep "physical id"| sort| uniq| wc -l)"
        echo "CPU核心信息：$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c)"
        echo "--------------------------内存信息--------------------------"
        sudo lshw -short -C memory | grep GiB
        echo "--------------------------硬盘信息--------------------------"
        echo "硬盘数量：$(ls /dev/sd* | grep -v [1-9] | wc -l)"
        df -Th
        
    - name: 优化磁盘空间
      uses: "hugoalh/disk-space-optimizer-ghaction@v0.8.1"
      with:
        operate_sudo: "True"
        docker_prune: "True"
        docker_clean: "True"
        apt_prune: "True"
        apt_clean: "True"
        npm_prune: "True"
        os_swap: "True"

    - name: 最大化构建空间
      uses: easimon/maximize-build-space@master
      with: 
        root-reserve-mb: 10240
        swap-size-mb: 1
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-docker-images: 'true'

    - name: 检查磁盘空间
      run: df -hT
        
    - name: 检出代码
      uses: actions/checkout@main
      
    - name: 初始化环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: | 
        sudo -E apt-get -qq update -y
        sudo -E apt-get -qq install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
        bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib \
        git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev \
        libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz \
        mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pyelftools \
        libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip \
        vim wget xmlto xxd zlib1g-dev
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo chown $USER:$GROUPS $GITHUB_WORKSPACE
        
    - name: 克隆源代码
      working-directory: ./
      run: |
        git clone $REPO_URL -b $REPO_BRANCH openwrt --depth=1
        
    - name: 缓存编译
      uses: stupidloud/cachewrtbuild@main
      with:
        ccache: 'true'
        mixkey: N1-${{ env.REPO_BRANCH }}
        prefix: ${{ github.workspace }}/openwrt
        
    - name: 更新并安装feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a -f
        ./scripts/feeds install -a -f
        
    - name: 加载自定义配置
      run: |
        [ -e $FILES ] && mv $FILES openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_SH

    - name: 下载软件包
      working-directory: ./openwrt
      run: |
        make defconfig
        make download -j$(nproc)
        find dl -size -1024c -exec rm -f {} \;
        
    - name: 编译固件
      run: |
        cd openwrt
        make -j$(nproc) || make -j$((`nproc`/2)) || make -j1 V=s
        echo "compile_status=success" >> $GITHUB_ENV
        
    - name: 打包OpenWrt固件
      if: ${{ env.compile_status }} == 'success' && !cancelled()
      uses: unifreq/openwrt_packit@master
      env:
        OPENWRT_ARMVIRT: openwrt/bin/targets/*/*/*.tar.gz
        KERNEL_REPO_URL: breakingbadboy/OpenWrt
        KERNEL_VERSION_NAME: 6.6.66
        KERNEL_AUTO_LATEST: true
        PACKAGE_SOC: s905d
        WHOAMI: xunmoo
        SW_FLOWOFFLOAD: 0
        SFE_FLOW: 0

    - name: 上传固件到Release
      uses: ncipollo/release-action@main
      if: ${{ env.PACKAGED_STATUS == 'success' }} && !cancelled()
      with:
        tag: immortalwrt_N1_${{ env.PACKAGED_OUTPUTDATE }}C
        artifacts: /opt/openwrt_packit/output/*
        allowUpdates: true
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          基于immortalwrt openwrt构建
          首次使用建议全新刷写
          * 基本信息
          IP: 192.168.50.3
          账户: root
          密码: password
          
    - name: 删除旧的Release
      uses: dev-drprasad/delete-older-releases@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        keep_latest: 3
        delete_tags : true
